(load "the-constraint-system.scm")

(define (squarer a b)
    (define (process-new-value)
        (if (has-value? b)
            (if (< (get-value b) 0)
                (error "square less than 0 -- SQUARER" (get-value b))
                (set-value! a (sqrt (get-value b)) me))
            (if (has-value? a)
                (set-value! b (* (get-value a) (get-value a)) me))))
    (define (process-forget-value)
        (forget-value! a me)
        (forget-value! b me)
        (process-new-value))
    (define (me request)
        (cond ((eq? request 'I-have-a-value)  (process-new-value))
              ((eq? request 'I-lost-my-value) (process-forget-value))
              (else                           (error "Unknown request -- SQUARER" request))))
    (connect a me)
    (connect b me)
    me)

(define (test)
    (define A (make-connector))
    (define B (make-connector))
    (probe 'x A)
    (probe 'square B)
    (squarer A B)
    (set-value! B 4 'user)
    (if (= (get-value A) 2)
        (display "\nTest ok")
        (error "Test failed"))
    (forget-value! B 'user)
    (set-value! A 9 'user)
    (if (= (get-value B) 81)
        (display "\nTest ok")
        (error "Test failed"))
    'passed)